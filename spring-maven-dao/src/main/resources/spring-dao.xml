<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       				   http://www.springframework.org/schema/context
       				   http://www.springframework.org/schema/context/spring-context.xsd
       				   http://www.springframework.org/schema/jee
       				   http://www.springframework.org/schema/jee/spring-jee-4.0.xsd"
       default-autowire="byName">

    <context:component-scan base-package="com.ccc.dao"/>
    <context:annotation-config/>

    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
        <!--<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/spring_maven_demo?autoReconnect=true&amp;useUnicode=true"/>-->
    <!--</bean>-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>

        <!--&lt;!&ndash; 默认值是 0, 连接池创建连接的初始连接数目 &ndash;&gt;-->
        <!--<property name="initialSize" value="2" />-->
        <!--&lt;!&ndash; 默认是 0, 连接数中最小空闲连接数 &ndash;&gt;-->
        <!--<property name="minIdle" value="2" />-->
        <!--&lt;!&ndash; 默认值是 8, 连接池中同时可以分派的最大活跃连接数 &ndash;&gt;-->
        <!--<property name="maxActive" value="8" />-->
        <!--&lt;!&ndash; 默认是 8 ，连接池中最大空闲连接数 &ndash;&gt;-->
        <!--<property name="maxIdle" value="5" />-->
        <!--&lt;!&ndash; 默认值是无限大，当连接池中连接已经用完了，等待建立一个新连接的最大毫秒数 ( 在抛异常之前 ) &ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->
        <!--&lt;!&ndash; 默认值是 false, 是否清理 removeAbandonedTimeout 秒没有使用的活动连接 , 清理后并没有放回连接池 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="true" />-->
        <!--&lt;!&ndash;  默认值是 300( 秒 ), 活动连接的最大空闲时间 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="180" />-->
        <!--&lt;!&ndash;  当建立一个数据库连接的时候，这些属性参数将传给 jdbc driver，参数的形式必须是 [propertypropertyName=property;]*。   -->
        <!--<property name="connectionProperties">  -->
            <!--<value>clientEncoding=utf-8</value>  -->
        <!--</property>  -->
        <!--&ndash;&gt;-->

        <!--&lt;!&ndash; validate配置，重连配置 &ndash;&gt;-->
        <!--&lt;!&ndash; 默认值是 false, 当连接池中的空闲连接是否有效 &ndash;&gt;-->
        <!--<property name="testWhileIdle" value="true" />-->
        <!--&lt;!&ndash; 默认值是 true ，当从连接池取连接时，验证这个连接是否有效 &ndash;&gt;-->
        <!--<property name="testOnBorrow" value="true" />-->
        <!--&lt;!&ndash; 默认值是 flase, 当从把该连接放回到连接池的时，验证这个连接是否有效 &ndash;&gt;-->
        <!--<property name="testOnReturn" value="false" />-->
        <!--&lt;!&ndash; 验证连接是否成功, SQL SELECT 指令至少要返回一行 &ndash;&gt;-->
        <!--<property name="validationQuery">-->
            <!--<value>select current date from sysibm.SYSDUMMY1</value>-->
        <!--</property>-->
        <!--&lt;!&ndash; 在执行检查时超时设置，通过statement 设置，statement.setQueryTimeout(validationQueryTimeout)  &ndash;&gt;-->
        <!--<property name="validationQueryTimeout" value="1" />-->
        <!--&lt;!&ndash; 默认值是 -1 ，每隔一段多少毫秒跑一次回收空闲线程的线程 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
        <!--&lt;!&ndash; 默认值是 3 ，每次验证空闲连接的连接数目 &ndash;&gt;-->
        <!--<property name="numTestsPerEvictionRun" value="8" />-->
    </bean>

    <!-- 配置mybatis工厂 -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <!-- 数据源 ref属性对应以上配置的连接池id -->

        <property name="dataSource" ref="dataSource" />

        <!-- mapperLocations配置Mapper.xml文件位置 -->

        <property name="mapperLocations" value="classpath*:com/ccc/dao/sqlMapper/*.xml" />

    </bean>

    <!-- 配置mapper对应的dao和mybatis工厂 -->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!-- 扫描com.XXX.dao这个包以及它的子包下的所有映射接口类 -->

        <property name="basePackage" value="com.ccc.dao" />

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

    </bean>


</beans>
